{"amount correct": 35, "percentage score": 100, "checks": {"check 1": {"description": "Ensure that the bounded-cpu.c file exists in project/clang", "status": true}, "check 2": {"description": "Complete all TODOs, remove the TODO markers, and rewrite comments for bounded-cpu.c", "status": true}, "check 3": {"description": "Use the argv command-line arguments to access bounding parameter", "status": true}, "check 4": {"description": "Use single-line comment character sequence in a C program", "status": true}, "check 5": {"description": "Use the argv command-line arguments to access letter parameter", "status": true}, "check 6": {"description": "Ensure that the bounded-cpu.go file exists in project/clang", "status": true}, "check 7": {"description": "Complete all TODOs, remove the TODO markers, and rewrite comments for bounded-cpu.go", "status": true}, "check 8": {"description": "Use the os.Args command-line arguments to access bounding parameter", "status": true}, "check 9": {"description": "Use the os.Args command-line arguments to access letter parameter", "status": true}, "check 10": {"description": "Use single-line comment character sequence in a Go program", "status": true}, "check 11": {"description": "Ensure that the unbounded-cpu.c file exists in project/clang", "status": true}, "check 12": {"description": "Complete all TODOs, remove the TODO markers, and rewrite comments for unbounded-cpu.c", "status": true}, "check 13": {"description": "Do not use an argv command-line arguments for a bounding parameter", "status": true}, "check 14": {"description": "Use the argv command-line arguments to access letter parameter", "status": true}, "check 15": {"description": "Use single-line comment character sequence in a C program", "status": true}, "check 16": {"description": "Ensure that the unbounded-cpu.go file exists in project/golang", "status": true}, "check 17": {"description": "Complete all TODOs, remove the TODO markers, and rewrite comments for unbounded-cpu.go", "status": true}, "check 18": {"description": "Use single-line comment character sequence in a Go program", "status": true}, "check 19": {"description": "Use go fmt to confirm that bounded-cpu.go is formatted correctly", "status": true}, "check 20": {"description": "Use go fmt to confirm that unbounded-cpu.go is formatted correctly", "status": true}, "check 21": {"description": "Run the bin/bounded-cpu program in the project/clang", "status": true}, "check 22": {"description": "Run the bin/bounded-cpu program in the project/clang and confirm two non-blank output lines", "status": true}, "check 23": {"description": "Run the bin/bounded-cpu program in the project/clang and confirm no zero output", "status": true}, "check 24": {"description": "Run the bin/bounded-cpu program in the project/clang and confirm fragment in output", "status": true}, "check 25": {"description": "Run the bin/bounded-cpu program in the project/golang", "status": true}, "check 26": {"description": "Run the bin/bounded-cpu program in the project/golang and confirm two non-blank output lines", "status": true}, "check 27": {"description": "Run the bin/bounded-cpu program in the project/golang and confirm no zero output", "status": true}, "check 28": {"description": "Run the bin/bounded-cpu program in the project/golang and confirm fragment in output", "status": true}, "check 29": {"description": "Ensure that the reflection.md file exists in the writing/ directory", "status": true}, "check 30": {"description": "Complete all TODOs, remove the TODO markers, and rewrite comments for the reflection", "status": true}, "check 31": {"description": "Delete the 'Add Your Name Here' prompt in the reflection file", "status": true}, "check 32": {"description": "Write a minimum of 500 meaningful words in the reflection", "status": true}, "check 33": {"description": "The reflection.md in writing has at least 10 of the 'heading' tag", "status": true}, "check 34": {"description": "The reflection.md in writing has at least 2 of the 'code_block' tag", "status": true}, "check 35": {"description": "Have at least a specific minimum number of 10 commits in repository", "status": true}}}